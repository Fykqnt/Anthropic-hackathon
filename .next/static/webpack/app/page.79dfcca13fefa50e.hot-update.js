"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/prompt.ts":
/*!***************************!*\
  !*** ./src/lib/prompt.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePrompt: () => (/* binding */ BasePrompt),\n/* harmony export */   DiffSchema: () => (/* binding */ DiffSchema),\n/* harmony export */   PROMPT_VERSION: () => (/* binding */ PROMPT_VERSION),\n/* harmony export */   applyDiff: () => (/* binding */ applyDiff),\n/* harmony export */   buildPrompt: () => (/* binding */ buildPrompt),\n/* harmony export */   defaultIntensities: () => (/* binding */ defaultIntensities),\n/* harmony export */   generateSurgeryPrompt: () => (/* binding */ generateSurgeryPrompt),\n/* harmony export */   getIntensityColor: () => (/* binding */ getIntensityColor),\n/* harmony export */   getIntensityLabel: () => (/* binding */ getIntensityLabel),\n/* harmony export */   hashDiff: () => (/* binding */ hashDiff),\n/* harmony export */   surgeryOptions: () => (/* binding */ surgeryOptions)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/v4/classic/schemas.js\");\n\nconst BasePrompt = {\n    version: \"v1\",\n    guidance: {\n        nose: {\n            bridge: \"鼻筋は直線的に整える。\"\n        },\n        skin: {\n            texture: \"毛穴を過度に消さず、自然な質感を保つ。\"\n        }\n    }\n};\nconst DiffSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    changes: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        selector: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n        op: zod__WEBPACK_IMPORTED_MODULE_0__.literal(\"replace\"),\n        before: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n        after: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n        rationale: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional()\n    })).max(5),\n    sampling: zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        temperature: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0).max(1).optional(),\n        top_p: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0).max(1).optional()\n    }).partial().optional(),\n    version_bump: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"patch\",\n        \"minor\",\n        \"major\"\n    ]).optional()\n});\nfunction applyDiff(base, diff) {\n    if (!diff || !diff.changes || diff.changes.length === 0) {\n        return base;\n    }\n    let result = JSON.parse(JSON.stringify(base)); // deep clone\n    for (const change of diff.changes){\n        if (change.op === \"replace\") {\n            const path = change.selector.split('.');\n            let current = result;\n            // Navigate to parent object\n            for(let i = 0; i < path.length - 1; i++){\n                if (!(path[i] in current)) {\n                    current[path[i]] = {};\n                }\n                current = current[path[i]];\n            }\n            // Apply the change\n            const lastKey = path[path.length - 1];\n            current[lastKey] = change.after;\n        }\n    }\n    return result;\n}\nfunction hashDiff(diff) {\n    if (!diff || !diff.changes || diff.changes.length === 0) {\n        return \"baseline\";\n    }\n    // Create a stable hash of the diff\n    const diffStr = JSON.stringify(diff.changes.sort((a, b)=>a.selector.localeCompare(b.selector)));\n    // Simple hash function\n    let hash = 0;\n    for(let i = 0; i < diffStr.length; i++){\n        const char = diffStr.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash).toString(16);\n}\nfunction buildPrompt(applied, inputs) {\n    return \"# 美容整形シミュレーション指示\\n- 施術: \".concat(inputs.procedure, \"\\n- 強度: \").concat(JSON.stringify(inputs.intensities), \"\\n- ガイダンス:\\n  - 鼻筋: \").concat(applied.guidance.nose.bridge, \"\\n  - 肌質: \").concat(applied.guidance.skin.texture, \"\\n- 注意: 不自然なアーチファクトを避け、骨格に沿った陰影を重視する。\");\n}\nconst surgeryOptions = [\n    {\n        key: 'eyeSurgery',\n        label: '眼瞼手術合計',\n        description: '（重瞼＋下眼瞼形成/脱脂＋眼瞼下垂＋内/外眼角）',\n        icon: '👁️'\n    },\n    {\n        key: 'fatInjection',\n        label: '脂肪注入（顔）',\n        description: '',\n        icon: '💉'\n    },\n    {\n        key: 'noseReshaping',\n        label: '鼻形成',\n        description: '（隆鼻＋その他）',\n        icon: '👃'\n    },\n    {\n        key: 'browLift',\n        label: '眉毛挙上',\n        description: '（ブロー/眉下切開等）',\n        icon: '🤨'\n    },\n    {\n        key: 'facialContouring',\n        label: '顔面輪郭形成',\n        description: '（骨切り等）',\n        icon: '🦴'\n    },\n    {\n        key: 'facelift',\n        label: 'フェイスリフト',\n        description: '（切開系）',\n        icon: '✨'\n    }\n];\nconst defaultIntensities = {\n    eyeSurgery: 0,\n    fatInjection: 0,\n    noseReshaping: 0,\n    browLift: 0,\n    facialContouring: 0,\n    facelift: 0\n};\nconst PROMPT_VERSION = \"v1\";\nfunction generateSurgeryPrompt(intensities) {\n    const activeOperations = surgeryOptions.filter((option)=>intensities[option.key] > 0);\n    if (activeOperations.length === 0) {\n        return \"この画像の美容整形シミュレーションをします。変更なし（自然な状態を維持）\";\n    }\n    let prompt = \"この画像の美容整形シミュレーションをします。変更を行う箇所のみを変化させることに集中してください。肌質を変化させずに、以下の施術を適用してください：\\n\\n\";\n    activeOperations.forEach((option, index)=>{\n        const intensity = intensities[option.key];\n        prompt += \"\".concat(index + 1, \". **\").concat(option.label, \"**\").concat(option.description, \" intensity: \").concat(intensity, \"\\n\");\n    });\n    // Add specific instructions based on intensity levels\n    prompt += \"\\n施術の強度について：\\n\";\n    prompt += \"- 1-2: 非常に自然で微細な変化\\n\";\n    prompt += \"- 3-4: 軽度の変化、自然な範囲内\\n\";\n    prompt += \"- 5-6: 中程度の変化、明確だが自然\\n\";\n    prompt += \"- 7-8: 強めの変化、はっきりとした効果\\n\";\n    prompt += \"- 9-10: 最大限の変化、劇的な効果\\n\\n\";\n    prompt += \"自然で美しい仕上がりを心がけ、各施術の強度に応じて適切に調整してください。\";\n    return prompt;\n}\nfunction getIntensityLabel(intensity) {\n    if (intensity === 0) return \"なし\";\n    if (intensity <= 2) return \"微細\";\n    if (intensity <= 4) return \"軽度\";\n    if (intensity <= 6) return \"中程度\";\n    if (intensity <= 8) return \"強め\";\n    return \"最大\";\n}\nfunction getIntensityColor(intensity) {\n    if (intensity === 0) return \"text-gray-400\";\n    if (intensity <= 2) return \"text-blue-500\";\n    if (intensity <= 4) return \"text-green-500\";\n    if (intensity <= 6) return \"text-yellow-500\";\n    if (intensity <= 8) return \"text-orange-500\";\n    return \"text-red-500\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/prompt.ts\n"));

/***/ })

});