openapi: 3.0.0
info:
  title: "CosmeticSim-MVP API"
  description: "美容整形シミュレーションMVP - 複数部位対応"
  version: "0.1.0"
  contact:
    name: "CosmeticSim Team"
    email: "support@cosmeticsim.com"

servers:
  - url: "http://localhost:8000"
    description: "開発サーバー"
  - url: "https://api.cosmeticsim.com"
    description: "本番サーバー"

paths:
  /analyze:
    post:
      summary: 画像からFaceMesh抽出＆事前計測
      description: "アップロードされた画像から顔のランドマークを検出し、3Dメッシュを構築して事前計測を行う"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [image]
              properties:
                image:
                  type: string
                  format: binary
                  description: "顔が写った画像ファイル（PNG, JPEG, WebP）"
                consent:
                  type: boolean
                  description: "利用同意の確認"
                  default: false
                px_per_mm:
                  type: number
                  nullable: true
                  description: "ピクセル/ミリメートル比率（自動推定の場合は省略）"
                  minimum: 1.0
                  maximum: 50.0
      responses:
        "200":
          description: "分析成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyzeResp"
        "400":
          description: "リクエストエラー"
        "500":
          description: "サーバーエラー"

  /edit/parse:
    post:
      summary: テキスト指示を正規化
      description: "自然言語の編集指示を構造化された編集操作に変換"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParseReq"
      responses:
        "200":
          description: "解析成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditOps"
        "400":
          description: "解析エラー"

  /mesh/deform:
    post:
      summary: メッシュ幾何変形
      description: "3Dメッシュに対して指定された変形操作を適用"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeformReq"
      responses:
        "200":
          description: "変形成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeformResp"
        "400":
          description: "変形エラー"

  /guides:
    post:
      summary: Depth/Normal/Displacement/Mask生成
      description: "変形後のメッシュから各種ガイド画像を生成"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GuidesReq"
      responses:
        "200":
          description: "ガイド生成成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuidesResp"

  /image/compose:
    post:
      summary: nano banana でAfter生成
      description: "ガイド画像と元画像を使用して最終的な美容整形結果画像を生成"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComposeReq"
      responses:
        "200":
          description: "画像合成成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComposeResp"

  /health:
    get:
      summary: ヘルスチェック
      description: "APIサーバーの状態確認"
      responses:
        "200":
          description: "正常"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  processors:
                    type: object
                    properties:
                      face_mesh:
                        type: boolean
                      mesh_editor:
                        type: boolean
                      nano_banana:
                        type: boolean

components:
  schemas:
    AnalyzeResp:
      type: object
      required: [landmarks, triangles, metrics_before, px_per_mm]
      properties:
        landmarks:
          type: array
          items:
            type: array
            items:
              type: number
          description: "468個の顔ランドマーク座標（X, Y, Z）"
          example: [[100.5, 200.3, 0.1], [101.2, 201.1, 0.2]]
        triangles:
          type: array
          items:
            type: array
            items:
              type: integer
          description: "メッシュの三角形頂点インデックス"
          example: [[0, 1, 2], [1, 3, 4]]
        metrics_before:
          $ref: "#/components/schemas/Metrics"
        px_per_mm:
          type: number
          description: "ピクセル/ミリメートル比率"
          example: 12.5
        processing_time_ms:
          type: number
          description: "処理時間（ミリ秒）"

    ParseReq:
      type: object
      required: [instruction]
      properties:
        instruction:
          type: string
          description: "編集指示（自然言語）"
          examples:
            - "鼻尖 +1.8mm"
            - "目を大きくする"
            - "顎を細くする 強度3"
            - "唇を厚くする +2.0mm"
            - "頬を引き締める"
            - "額を広くする"

    EditOps:
      type: object
      required: [ops]
      properties:
        ops:
          type: array
          items:
            type: object
            required: [target, delta_mm]
            properties:
              target:
                type: string
                enum: 
                  - "nasal_tip_mm"
                  - "nasal_bridge_mm"
                  - "eye_size_ratio"
                  - "jaw_width_mm"
                  - "lip_thickness_mm"
                  - "cheek_contour_mm"
                  - "forehead_width_mm"
                description: "変形対象部位"
              delta_mm:
                type: number
                description: "変形量（ミリメートル、比率の場合は0-1）"
                minimum: -4.0
                maximum: 4.0
              radius_mm:
                type: number
                description: "影響半径（ミリメートル）"
                default: 12
              sigma_mm:
                type: number
                description: "ガウシアン減衰パラメータ（ミリメートル）"
                default: 8

    DeformReq:
      type: object
      required: [landmarks, triangles, ops, px_per_mm]
      properties:
        landmarks:
          type: array
          items:
            type: array
            items:
              type: number
          description: "元のランドマーク座標"
        triangles:
          type: array
          items:
            type: array
            items:
              type: integer
          description: "メッシュの三角形定義"
        ops:
          type: array
          items:
            $ref: "#/components/schemas/EditOps/properties/ops"
        px_per_mm:
          type: number
          description: "ピクセル/ミリメートル比率"

    DeformResp:
      type: object
      required: [mesh_after, metrics_after]
      properties:
        mesh_after:
          type: object
          required: [vertices, faces]
          properties:
            vertices:
              type: array
              items:
                type: array
                items:
                  type: number
              description: "変形後の頂点座標"
            faces:
              type: array
              items:
                type: array
                items:
                  type: integer
              description: "三角形面の定義"
        metrics_after:
          $ref: "#/components/schemas/Metrics"
        processing_time_ms:
          type: number

    GuidesReq:
      type: object
      required: [mesh_after]
      properties:
        mesh_after:
          type: object
          description: "変形後のメッシュ"
        mesh_before:
          type: object
          nullable: true
          description: "変形前のメッシュ（差分計算用）"
        render_px:
          type: integer
          description: "レンダリング解像度"
          default: 1024
          minimum: 512
          maximum: 2048

    GuidesResp:
      type: object
      required: [depth_png, normal_png, disp_png, mask_png]
      properties:
        depth_png:
          type: string
          description: "深度マップ画像（base64）"
          format: byte
        normal_png:
          type: string
          description: "法線マップ画像（base64）"
          format: byte
        disp_png:
          type: string
          description: "変位マップ画像（base64）"
          format: byte
        mask_png:
          type: string
          description: "マスク画像（base64）"
          format: byte

    ComposeReq:
      type: object
      required: [original_image_url, guides, prompt]
      properties:
        original_image_url:
          type: string
          description: "元画像のURLまたはbase64"
        guides:
          type: object
          required: [depth_png, normal_png, disp_png, mask_png]
          properties:
            depth_png:
              type: string
              format: byte
            normal_png:
              type: string
              format: byte
            disp_png:
              type: string
              format: byte
            mask_png:
              type: string
              format: byte
        prompt:
          type: string
          description: "画像生成用プロンプト"
        strength_schedule:
          type: array
          items:
            type: number
            minimum: 0.0
            maximum: 1.0
          description: "強度スケジュール"
          default: [1.0, 0.7, 0.5]

    ComposeResp:
      type: object
      required: [after_image_url]
      properties:
        after_image_url:
          type: string
          description: "生成された美容整形結果画像（base64）"
          format: byte
        params_json_url:
          type: string
          nullable: true
          description: "パラメータファイル（JSON）"
          format: byte
        face_glb_url:
          type: string
          nullable: true
          description: "3Dメッシュファイル（GLB）"
          format: byte
        processing_time_ms:
          type: number
        nano_banana_attempts:
          type: integer
          description: "Nano Banana API試行回数"

    Metrics:
      type: object
      properties:
        nasal_tip_mm:
          type: number
          description: "鼻尖の前方移動量（相対、mm）"
        nasal_bridge_mm:
          type: number
          description: "鼻筋の高さ変化（相対、mm）"
        eye_size_ratio:
          type: number
          description: "目のサイズ比率変化"
        jaw_width_mm:
          type: number
          description: "顎幅の変化（相対、mm）"
        lip_thickness_mm:
          type: number
          description: "唇の厚さ変化（相対、mm）"
        cheek_contour_mm:
          type: number
          description: "頬の引き締め量（相対、mm）"
        forehead_width_mm:
          type: number
          description: "額幅の変化（相対、mm）"
        alar_width_ratio:
          type: number
          description: "鼻翼幅比率"
        e_line_mm:
          type: number
          description: "Eライン距離（mm）"
        overall_symmetry_score:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: "全体の対称性スコア"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: "APIキー認証"

security:
  - ApiKeyAuth: []

tags:
  - name: "analysis"
    description: "顔分析関連"
  - name: "editing"
    description: "編集操作関連"
  - name: "mesh"
    description: "3Dメッシュ処理"
  - name: "rendering"
    description: "レンダリング関連"
  - name: "composition"
    description: "画像合成"

